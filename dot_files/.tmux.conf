# set -g mouse on
# sane scrolling:
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

# set -g status-right "#[fg=green]: #(xkbswitch -ge) : #[fg=brightblue]#(curl icanhazip.com) #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
#
# set -g status-left "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p :: #(date -u | awk '{print $4}')::"
#
set -g status-interval 1
#
set-window-option -g xterm-keys on
set -g default-terminal "screen-256color"
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"
# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
# set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"

set -g history-limit 10000

# VIM like movements
set -g status-keys vi
setw -g mode-keys vi
set -g @shell_mode 'vi'

# setw -g mode-mouse on
setw -g monitor-activity on

# Set ability to capture on start and restore on exit window data when running an application
# setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -sg escape-time 0

set -g base-index 1

bind -n C-Right next-window
bind -n C-Left previous-window
bind -n M-t new-window -c '#{pane_current_path}'
bind -n M-W kill-window
bind -n M-w kill-pane
bind -n M-z resize-pane -Z
# set-option -g default-terminal "xterm-256color"
# set-window-option -g xterm-keys on

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n M-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

unbind C-d # destroys tabs on C-d which is used in pry and vim for moving

#### MOUSE ####
set -g mouse on
# bind -Tcopy-mode MouseDrag1Pane setw @mode 1\; copy-mode -M
# bind -Tcopy-mode MouseDragEnd1Pane if -F '#{@mode}' 'send -X copy-selection' 'send -X copy-selection-and-cancel'
# bind -n MouseDrag1Pane if -F '#{mouse_any_flag}' 'if -F "#{pane_in_mode}" "setw -u @mode; copy-mode -M" "send-keys -M"' "setw -u @mode; copy-mode -M"

# bind -t vi-copy MouseDrag1Pane send -X
# unbind  -t vi-copy MouseDragEnd1Pane
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -selection clipboard -i"
unbind -T copy-mode-vi MouseDragEnd1Pane

bind-key -T copy-mode-vi WheelUpPane select-pane\; send-keys -t{mouse} -X clear-selection\; send-keys -t{mouse} -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane\; send-keys -t{mouse} -X clear-selection\; send-keys -t{mouse} -X -N 3 scroll-down

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -t{mouse} -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -t{mouse} -X select-line"

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# bind -tvi-copy MouseDragEnd1Pane copy-selection -x
# bind -Tcopy-mode MouseDrag1Pane setw @mode 1\; copy-mode -M
# bind -Tcopy-mode MouseDragEnd1Pane if -F '#{@mode}' 'send -X copy-selection' 'send -X copy-selection-and-cancel'
# bind -n MouseDrag1Pane if -F '#{mouse_any_flag}' 'if -F "#{pane_in_mode}" "setw -u @mode; copy-mode -M" "send-keys -M"' "setw -u @mode; copy-mode -M"
#### MOUSE ####

# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# add splits mnemonic binds
bind-key -n M-- split-window -v -c "#{pane_current_path}"
bind-key -n M-\ split-window -h -c "#{pane_current_path}"

# bind resizing
bind-key -n M-S-Right resize-pane -R 10
bind-key -n M-S-Left resize-pane -L 10
bind-key -n M-S-Up resize-pane -U 10
bind-key -n M-S-Down resize-pane -D 10

bind-key -n M-Right resize-pane -R 3
bind-key -n M-Left resize-pane -L 3
bind-key -n M-Up resize-pane -U 3
bind-key -n M-Down resize-pane -D 3

set -g base-index 1
set -g pane-base-index 1

unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# tm_spotify="#[fg=$tm_color_background,bg=$tm_color_music]#(osascript ~/.dotfiles/applescripts/spotify.scpt)"
# tm_itunes="#[fg=$tm_color_music,bg=$tm_color_background]$tm_right_separator_black#[fg=$tm_color_background,bg=$tm_color_music]#(osascript ~/.dotfiles/applescripts/itunes.scpt)"
# tm_rdio="#[fg=$tm_color_background,bg=$tm_color_music]#(osascript ~/.dotfiles/applescripts/rdio.scpt)"
# tm_battery="#[fg=colour255,bg=$tm_color_music]$tm_right_separator_black#[bg=colour255]#(~/config/bin/battery.sh)"
#
# tm_date="#[bg=colour255,fg=$tm_color_inactive]$tm_right_separator_black#[bg=$tm_color_inactive,fg=$tm_color_background] %R %d %b"
#
# tm_host="#[bg=$tm_color_inactive,fg=$tm_color_feature]$tm_right_separator_black#[bg=$tm_color_feature,fg=$tm_color_background,bold] #h "
#
# tm_session_name="#[bg=$tm_color_feature,fg=$tm_color_background,bold]$tm_icon #S #[fg=$tm_color_feature,bg=default,nobold]$tm_left_separator_black"
#
# tm_locale="#[fg=colour255,bg=$tm_color_music]$tm_right_separator_black#[bg=colour255]#(issw)"
# Ñ‹
#
# tm_locale_name="#[bg=$tm_color_feature,fg=$tm_color_background,bold]$tm_icon #(xkbswitch -ge) #[fg=$tm_color_feature,bg=default,nobold]$tm_left_separator_black"
#
# set -g status-left $tm_session_name
# set -g status-right $tm_locale' '$tm_battery' '$tm_date # ' '$tm_host

# t

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat' # enhance tmux search
set -g @plugin 'tmux-plugins/tmux-yank' # copy to system clipbaord
set -g @plugin 'tmux-plugins/tmux-open'

# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @resurrect-strategy-nvim 'session'

# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-restore 'on'

# set -g @plugin 'tmux-plugins/tmux-battery'

run-shell ~/.tmux/plugins/mouse/scroll_copy_mode.tmux

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
