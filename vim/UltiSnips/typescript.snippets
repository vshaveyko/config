# Generator function
snippet gfn
function* ${1:name}(${2}) {
	yield ${3};
}
endsnippet

# Arrow function
snippet => "Arrow function" i
(${1}) => {
	${2}
}
endsnippet

# Class
snippet class
class ${1:name} {
	constructor(${2:arg}) {
		${3:// init}
	}
	${4}
}
endsnippet

# For of loop
snippet forof
for (let ${1:s} of ${2:sequence}) {
	${3}
}
endsnippet

# Import
snippet im
import ${1:foo} from '${2:bar}'
endsnippet

# Export
snippet ex
export ${1:default} ${2:bar}
endsnippet

snippet log "console.log(...)" b
console.log($0)
endsnippet

snippet lred
console.log("%c" + ${1}, 'font-weight:bold;color:red;')
endsnippet

snippet tim "setTimeout" w
setTimeout(() ->
	${1}
})
endsnippet

snippet func+ "expand class function with var"
this.${1}(${2});
${0}

$1($2): {

	${VISUAL}

}
endsnippet

snippet pfunc+ "expand private class function with var"
this.${1}(${2});
${0}

private $1($2): {

	${VISUAL}

}
endsnippet

snippet gfunc+ "expand getter class function with var"
this.${1}(${2});
${0}

get $1($2): {

	${VISUAL}

}
endsnippet

snippet spfunc+ "expand setter class function with var"
this.${1}(${2});
${0}

set $1($2): {

	${VISUAL}

}
endsnippet

snippet => "expand => func"
${1} = (${2}) => {

	${VISUAL}

}
endsnippet

snippet =>+ "expand => func with var"
${1}(${2})
${0}

$1 = ($2) => {

	${VISUAL}

}
endsnippet

snippet class "expand => func"
class ${1} {

	${VISUAL}{$0}

}
endsnippet

snippet "(f|=>|func|class)" "expand method|class|module from visual selection" r
`!p
snip.rv += match.group(1)
` ${1}
	${0:${VISUAL}}
}
endsnippet

snippet ng2-component
import { Component, OnInit } from '@angular/core';

	@Component({
		selector: '$1',
		templateUrl: 'template.pug',
		styleUrls: ['./styles/_import.sass']
	})
	export class ${1:#:ComponentName}Component implements OnInit {
		constructor() { }

		ngOnInit() { }
		${0}
	}
endsnippet

snippet ng2-service
	import { Injectable } from '@angular/core';

	@Injectable()
	export class ${1:#:ServiceName}Service {
		${0}
		constructor() { }

	}
endsnippet

snippet path
	{ path: '/${1:#:path}', component: ${2:#:Component} }${0}
endsnippet
